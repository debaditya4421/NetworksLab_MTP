Data structure used : 

// Define shared memory structure
typedef struct {
    int is_allocated;           // Indicates if the MTP socket is allocated
    pid_t process_id;           // Process ID for the process that created the MTP socket
    socklen_t udp_socket_id;          // Mapping from MTP socket ID to the corresponding UDP socket ID
    struct sockaddr_in dest_addr; // IP and port address of the other end of the MTP socket
    struct sockaddr_in source_addr; // IP and port address of the other end of the MTP socket
    // Add send buffer and receive buffer as fixed size arrays of messages
    char send_buffer[MAX_SEND_BUF_SZ][MAX_MESSAGE_SIZE]; // 10 messages of 1 KB each
    int send_ptr1, send_ptr2, send_ptr11;  // 0,0,0
    int send_size;  // no of messages in send buffer ; ptr1 to ptr2
    int send_size1;  // no of messages actually in send buffer ; ptr11 to ptr2
    int recv_ptr1, recv_ptr2;
    char recv_buffer[MAX_RECV_BUF_SZ][MAX_MESSAGE_SIZE];  // 5 messages of 1 KB each
    // Add swnd (sender window size) and rwnd (receiver window size) structures
    struct {
        int size;               // Size of the window
        int sequence_numbers[MAX_SWND]; // Sequence numbers of messages sent but not acknowledged
    } swnd;
    struct {
        int size;               // Size of the window
        int sequence_numbers[MAX_RWND]; // Sequence numbers of messages received but not acknowledged
    } rwnd;
    int timestamp; // last time of the data msg sent 
    int last_seq_no;  // next seq no to be read from m_recv_from ; initialize = 0
    int last_entry_rwnd; // 5
    int next_seq_no;  // next seq no to be sent by thread_S ; initialize = 0
    int send_max; // no of more msgs that can be sent by the sender = y
    int time_recv; // last time of the ack msg sent
    int wr1,wr2; // no of msgs written into the receive buf, no of msgs taken out of the recv buf

} SharedMemory;



Average no of transmissions : 
0.05  -  1.06
0.1   -  1.11
0.15  -  1.13
0.20  -  1.22
0.25  -  1.25
0.3   -  1.29
0.35  -  1.37
0.4   -  1.45
0.45  -  1.49
0.5   -  1.56
